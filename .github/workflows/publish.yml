name: Publish Hive Metastore Image

on:
  release:
    types: [published]

jobs:
  build:
    name: Build Docker images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux/amd64
          - platform: linux/arm64
    steps:
      - name: Load environment from .env file
        run: |
          while IFS='=' read -r key value; do
            if [[ ! "$key" =~ ^# && -n "$key" ]]; then
              echo "$key=$value" >> $GITHUB_ENV
            fi
          done < .env

      - name: Prepare environment
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          version=${{ github.event.release.tag_name }}
          echo "HIVE_METASTORE_VERSION=${version}" >> $GITHUB_ENV

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=semver,pattern={{version}},value=${{ github.event.release.tag_name }}
            type=raw,value=latest
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          repository: ${{ env.REGISTRY_IMAGE }}
          short-description: "Lightweight Hive Metastore with PostgreSQL"
          readme-filepath: ./README.md

      - name: Load tarball hash from versions.json
        id: hive_hash
        run: |
          version=${{ github.event.release.tag_name }}
          hash=$(jq -r --arg v "$version" '.hive[$v].sha256' versions.json)
          echo "HIVE_TARBALL_SHA256=$hash" >> $GITHUB_ENV

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          provenance: true
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            HIVE_VERSION=${{ github.event.release.tag_name }}
            HIVE_TARBALL_SHA256=${{ env.HIVE_TARBALL_SHA256 }}
            BUILD_DATE=${{ steps.meta.outputs.created }}
            VCS_REF=${{ github.sha }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          retention-days: 1
  scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: false
    steps:
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: seathegood/hive-metastore:${{ github.event.release.tag_name }}
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH
          
  merge:
    runs-on: ubuntu-latest
    needs: [build, scan]
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
