name: Check for New Hive Releases

on:
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2am UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-hive-version:
    runs-on: ubuntu-latest
    env:
      DOCKERFILE_PATH: Dockerfile
      VERSION_FILE: versions.json
      HIVE_DOWNLOAD_BASE: https://dlcdn.apache.org/hive
      GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
      GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}

    steps:
        
      - name: Get latest Hive version
        id: hive
        run: |
          latest=$(curl -s https://downloads.apache.org/hive/ | grep -oP 'hive-\K[0-9.]+(?=/)' | sort -V | tail -1)
          echo "latest=$latest" >> "$GITHUB_OUTPUT"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current version from Dockerfile
        id: current
        run: |
          current=$(grep -oP 'ARG HIVE_VERSION=\K[0-9.]+' "$DOCKERFILE_PATH" | head -n1)
          echo "current<<EOF" >> "$GITHUB_OUTPUT"
          echo "$current" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Check if update is needed
        run: |
          if [ "${{ steps.hive.outputs.latest }}" == "${{ steps.current.outputs.current }}" ]; then
            echo "Hive is already up to date: ${{ steps.current.outputs.current }}"
            exit 0
          fi

      - name: Compare versions
        if: steps.hive.outputs.latest != steps.current.outputs.current
        run: |
          echo "New version found: ${{ steps.hive.outputs.latest }}"
          echo "Current version: ${{ steps.current.outputs.current }}"

      - name: Install jq
        if: steps.hive.outputs.latest != steps.current.outputs.current
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check if branch already exists remotely
        id: branch-check
        run: |
          BRANCH="hive-update-${{ steps.hive.outputs.latest }}"
          if git ls-remote --exit-code --heads origin "$BRANCH"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Update files
        if: steps.branch-check.outputs.exists == 'false'
        run: |
          # Update HIVE_VERSION in Dockerfile
          sed -i "s/ARG HIVE_VERSION=.*/ARG HIVE_VERSION=${{ steps.hive.outputs.latest }}/" $DOCKERFILE_PATH

          # Update SCHEMA_VERSION in Dockerfile, entrypoint.sh and healthcheck.sh
          schema_version="$(echo "${{ steps.hive.outputs.latest }}" | cut -d'.' -f1,2).0"
          sed -i "s/SCHEMA_VERSION=\"[0-9.]*\"/SCHEMA_VERSION=\"$schema_version\"/" entrypoint.sh
          sed -i "s/SCHEMA_VERSION=\"[0-9.]*\"/SCHEMA_VERSION=\"$schema_version\"/" healthcheck.sh
          sed -i "s/ARG SCHEMA_VERSION=.*/ARG SCHEMA_VERSION=\"$schema_version\"/" $DOCKERFILE_PATH

          # Fetch SHA256 and update versions.json
          sha=$(curl -s $HIVE_DOWNLOAD_BASE/hive-${{ steps.hive.outputs.latest }}/apache-hive-${{ steps.hive.outputs.latest }}-bin.tar.gz.sha256 | cut -d' ' -f1)
          jq --arg v "${{ steps.hive.outputs.latest }}" --arg s "$sha" '.hive[$v] = {sha256: $s}' $VERSION_FILE > tmp.json && mv tmp.json $VERSION_FILE

          git add $DOCKERFILE_PATH $VERSION_FILE entrypoint.sh healthcheck.sh

      - name: Verify updated version strings
        if: steps.branch-check.outputs.exists == 'false'
        run: |
          grep HIVE_VERSION $DOCKERFILE_PATH
          grep SCHEMA_VERSION entrypoint.sh
          grep SCHEMA_VERSION healthcheck.sh
          jq '.hive' versions.json

      - name: Show git diff for debugging
        if: steps.branch-check.outputs.exists == 'false'
        run: git status && git diff


      - name: Create Pull Request
        if: steps.branch-check.outputs.exists == 'false'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update to Hive ${{ steps.hive.outputs.latest }}"
          title: "chore: update to Hive ${{ steps.hive.outputs.latest }}"
          body: |
            This pull request updates Hive to version ${{ steps.hive.outputs.latest }}.
            Please review and test before merging.
          branch: hive-update-${{ steps.hive.outputs.latest }}

      - name: Summary
        if: steps.branch-check.outputs.exists == 'false'
        run: |
          echo "### Hive version update" >> $GITHUB_STEP_SUMMARY
          echo "- Current: ${{ steps.current.outputs.current }}" >> $GITHUB_STEP_SUMMARY
          echo "- New: ${{ steps.hive.outputs.latest }}" >> $GITHUB_STEP_SUMMARY
